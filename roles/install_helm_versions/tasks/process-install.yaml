---
- name: Check if Helm binary exists ({{ version }})
  ansible.builtin.stat:
    path: '{{ bin_file }}'
  register: _helm_stat
  tags:
    - avinode_devenv_install_helm

- name: Check Helm version ({{ version }})
  changed_when: false
  command: '{{ bin_file }} version'
  failed_when: false
  register: _helm_version
  tags:
    - avinode_devenv_install_helm

- name: Install Helm version
  block:
    - name: Create temporary build directory ({{ version }})
      ansible.builtin.tempfile:
        state: directory
        suffix: .helm-{{ version }}
      changed_when: false
      register: _tmp_dir

    - name: Set Helm download base URL ({{ version }})
      ansible.builtin.set_fact:
        _helm_base_url: https://get.helm.sh/helm-v{{ version }}-{{ go_platform }}-{{ go_arch }}.tar.gz

    - name: Fetech Helm checksum ({{ version }})
      uri:
        return_content: yes
        url: '{{ _helm_base_url + ".sha256" }}'
      register: _helm_v2_checksum
      when: version is version('3.0', '<')

    - name: Download Helm archive file ({{ version }})
      ansible.builtin.get_url:
        checksum: >-
          sha256:{{ version is version('3.0', '>=') 
              | ternary(_helm_base_url + ".sha256sum", _helm_v2_checksum.content) }}
        dest: '{{ _tmp_dir.path }}'
        mode: '0600'
        url: '{{ _helm_base_url }}'
      register: _helm_tgz

    - name: Expanding the Helm archive file ({{ version }})
      ansible.builtin.unarchive:
        dest: '{{ _tmp_dir.path }}'
        mode: '0755'
        remote_src: yes
        src: '{{ _helm_tgz.dest }}'

    - name: Copy Helm executable to bin/ directory ({{ version }})
      ansible.builtin.copy:
        dest: '{{ bin_file }}'
        group: '{{ avinode_devenv_default_group }}'
        mode: '0755'
        owner: '{{ avinode_devenv_default_owner }}'
        remote_src: yes
        src: '{{ _tmp_dir.path }}/{{ go_platform }}-{{ go_arch }}/helm'
      become: '{{ avinode_devenv_become_for_all }}'

  always:
    - name: Delete temporary build directory ({{ version }})
      ansible.builtin.file:
        path: '{{ _tmp_dir.path }}'
        state: absent
      changed_when: false
  when: >-
    not _helm_stat.stat.exists
      or 'v' + version not in _helm_version.stdout
  tags:
    - avinode_devenv_install_helm
...
