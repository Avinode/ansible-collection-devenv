---
- name: Ensure required tools are installed.
  ansible.builtin.apt:
    cache_valid_time: 86400  # 24 hours
    name: [unzip, zsh]
    state: present
    update_cache: true
  when: ansible_os_family == 'Debian'

- name: Testing 'avinode.devenv.install_terraform_versions'
  block:
    # -------------------------------------------------------------------------
    # Arrange
    # -------------------------------------------------------------------------
    - name: Create temporary test directory
      ansible.builtin.tempfile:
        state: directory
        suffix: .install-terraform-integration-tests
      register: _tmp_test_dir
    - set_fact:
        avinode_devenv_prefix: '{{ _tmp_test_dir.path }}'
        _saved_avinode_devenv_go_arch: '{{ avinode_devenv_go_arch }}'
        avinode_devenv_go_arch:
          - 'arm64'
          - 'amd64'
    - include_role:
        name: avinode.devenv.baseline

    # -------------------------------------------------------------------------
    # Test install
    # -------------------------------------------------------------------------
    - name: Executing `install_terraform_versions` to test installs
      import_role:
        name: avinode.devenv.install_terraform_versions
      vars:
        install_terraform_versions:
          absent: []
          absent_symlinks: []
          installed:
            - '0.14.7'
            - '1.0.2'
          symlinks:
            terraform0.14: '0.14.7'
            terraform1: '1.0.2'

    - name: Test installed correct architecture versions of terraform executables.
      ansible.builtin.command:
        cmd: 'file {{ _tmp_test_dir.path }}/bin/{{ item.key }}'
      register: _ver_check
      failed_when: item.value not in _ver_check.stdout
      loop: '{{ _cmd_arch | dict2items }}'
      vars:
        _cmd_arch:
          terraform1.0.2: 'arm64'
          terraform0.14.7: 'x86_64'

  always:
    - name: Delete temporary test directory
      ansible.builtin.file:
        path: '{{ _tmp_test_dir.path }}'
        state: absent
    - set_fact:
        avinode_devenv_go_arch: '{{ _saved_avinode_devenv_go_arch }}'
        _saved_avinode_devenv_go_arch:
  vars:
    avinode_devenv_become_for_all: false
    avinode_devenv_default_group: '{{ ansible_user_gid }}'
    avinode_devenv_default_owner: '{{ ansible_user_id }}'
...
