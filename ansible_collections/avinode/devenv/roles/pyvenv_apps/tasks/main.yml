---
- name: Set pyenv application installation facts.
  ansible.builtin.set_fact:
    _pyvenv_apps_normalized: '{{ avinode_devenv_pyvenv_apps | avinode.devenv.normalize_pyvenv_apps }}'
    _pyvenv_apps_home_dir: '{{ avinode_devenv_prefix }}/opt/python'
  tags:
    - avinode_devenv_pyvenv_apps

- include_tasks: process-install.yaml
  vars:
    _pyvenv_bin_files: '{{ _pyvenv_install_item["bin_files"] }}'
    _pyvenv_has_argcomplete: '{{ _pyvenv_install_item["has_argcomplete"] }}'
    _pyvenv_packages: '{{ _pyvenv_install_item["packages"] }}'
    _pyvenv_path: '{{ _pyvenv_apps_home_dir }}/{{ _pyvenv_install_item["name"] }}'
    _pyvenv_state: '{{ avinode_devenv_force_upgrade_all | ternary("latest", _pyvenv_install_item["state"]) }}'
    _pyvenv_venv_command: '{{ avinode_devenv_python_path }} -m venv'
  loop: '{{ _pyvenv_apps_normalized | selectattr("state", "ne", "absent") }}'
  loop_control:
    loop_var: _pyvenv_install_item
    label: '{{ _pyvenv_install_item.name }}'
  tags:
    - avinode_devenv_pyvenv_apps

- include_tasks: process-uninstall.yaml
  vars:
    _pyvenv_bin_files: '{{ _pyvenv_uninstall_item["bin_files"] }}'
    _pyvenv_packages: '{{ _pyvenv_uninstall_item["packages"] }}'
    _pyvenv_path: '{{ avinode_devenv_prefix }}/opt/python/{{ _pyvenv_uninstall_item["name"] }}'
  loop: '{{ _pyvenv_apps_normalized | selectattr("state", "eq", "absent") }}'
  loop_control:
    loop_var: _pyvenv_uninstall_item
    label: '{{ _pyvenv_uninstall_item.name }}'
  tags:
    - avinode_devenv_pyvenv_apps
...
